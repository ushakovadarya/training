[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\566\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\566\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 1.8.0_291)
[debug]       Load.loadUnit: plugins took 121.7795ms
[debug]       Load.loadUnit: defsScala took 0.5074ms
[debug] [Loading] Scanning directory C:\Users\566\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\566\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 21.0811 ms
[debug]           Load.resolveProject(global-plugins) took 59.6319ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\566\.sbt\1.0\plugins, plugins: List(<none>))) took 120.3468ms
[debug] [Loading] Done in C:\Users\566\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 154.115ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3445ms
[debug]     Load.loadUnit(file:/C:/Users/566/.sbt/1.0/plugins/, ...) took 287.4141ms
[debug]   Load.apply: load took 470.6556ms
[debug]   Load.apply: resolveProjects took 7.5207ms
[debug]   Load.apply: finalTransforms took 80.363ms
[debug]   Load.apply: config.delegates took 12.4858ms
[debug]   Load.apply: Def.make(settings)... took 654.5131ms
[debug]   Load.apply: structureIndex took 151.0368ms
[debug]   Load.apply: mkStreams took 2.5436ms
[info] loading global plugins from C:\Users\566\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3901.9349ms
[debug]           Load.loadUnit: plugins took 35.238ms
[debug]           Load.loadUnit: defsScala took 0.0052ms
[debug] [Loading] Scanning directory E:\Users\566\Desktop\Scala\tranning\project
[debug]             Load.loadUnit: mkEval took 11.0513ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\Users\566\Desktop\Scala\tranning\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.0174 ms
[info] loading settings for project tranning-build from idea2.sbt ...
[debug]               Load.resolveProject(tranning-build) took 7.9792ms
[debug]             Load.loadTransitive: finalizeProject(Project(id tranning-build, base: E:\Users\566\Desktop\Scala\tranning\project, plugins: List(<none>))) took 12.8192ms
[debug] [Loading] Done in E:\Users\566\Desktop\Scala\tranning\project, returning: (tranning-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 230.7467ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.738ms
[debug]         Load.loadUnit(file:/E:/Users/566/Desktop/Scala/tranning/project/, ...) took 273.0352ms
[debug]       Load.apply: load took 275.8737ms
[debug]       Load.apply: resolveProjects took 0.1165ms
[debug]       Load.apply: finalTransforms took 10.7705ms
[debug]       Load.apply: config.delegates took 0.4406ms
[debug]       Load.apply: Def.make(settings)... took 112.3426ms
[debug]       Load.apply: structureIndex took 36.4877ms
[debug]       Load.apply: mkStreams took 0.0034ms
[info] loading project definition from E:\Users\566\Desktop\Scala\tranning\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4491.9054ms
[debug]     Load.loadUnit: defsScala took 0.0035ms
[debug] [Loading] Scanning directory E:\Users\566\Desktop\Scala\tranning
[debug]       Load.loadUnit: mkEval took 0.2498ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\Users\566\Desktop\Scala\tranning, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.4386 ms
[info] loading settings for project tranning from build.sbt ...
[debug]         Load.resolveProject(tranning) took 47.8642ms
[debug]       Load.loadTransitive: finalizeProject(Project(id tranning, base: E:\Users\566\Desktop\Scala\tranning, plugins: List(<none>))) took 54.2367ms
[debug] [Loading] Done in E:\Users\566\Desktop\Scala\tranning, returning: (tranning)
[debug]     Load.loadUnit: loadedProjectsRaw took 3922.8106ms
[debug]     Load.loadUnit: cleanEvalClasses took 68.2604ms
[debug]   Load.loadUnit(file:/E:/Users/566/Desktop/Scala/tranning/, ...) took 8483.8439ms
[debug] Load.apply: load took 8485.9329ms
[debug] Load.apply: resolveProjects took 0.1946ms
[debug] Load.apply: finalTransforms took 36.0011ms
[debug] Load.apply: config.delegates took 2.445ms
[debug] Load.apply: Def.make(settings)... took 171.6979ms
[debug] Load.apply: structureIndex took 31.7043ms
[debug] Load.apply: mkStreams took 0.0045ms
[info] set current project to tranning (in build file:/E:/Users/566/Desktop/Scala/tranning/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55116 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55116, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to tranning (in build file:/E:/Users/566/Desktop/Scala/tranning/)
[debug] > Exec(idea-shell, None, None)
